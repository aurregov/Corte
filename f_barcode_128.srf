HA$PBExportHeader$f_barcode_128.srf
global type f_barcode_128 from function_object
end type

forward prototypes
global function string f_barcode_128 (string as_cadena, long an_tipo, long an_ucc)
end prototypes

global function string f_barcode_128 (string as_cadena, long an_tipo, long an_ucc);String ls_barcode,ls_inicio,ls_fin,ls_checksum
Long li_n,li_sum,li_checksum,li_caracter

ls_fin = Char(126)

//Si el barcode es UCC
If an_ucc = 1 Then as_cadena = Char(172) + as_cadena

//an_tipo hace referencia al tipo de subconjunto del codigo
//an_tipo = 0 es code 128 A
//an_tipo = 1 es code 128 B
If an_tipo = 0 Then
  li_checksum = 103
  ls_inicio = "{"
Else
  li_checksum = 104
  ls_inicio = "|"
End If

For li_n = 1 To Len(as_cadena)
  li_caracter = Asc(Mid(as_cadena, li_n, 1))
  
  If li_caracter < 123 Then
    li_caracter = li_caracter - 32
  Else
    li_caracter = li_caracter - 103
  End If
  
  li_sum = li_sum + (li_caracter * li_n)

  //Now work on output string, no spaces in TrueType fonts, quotes replaced for Word mailmerge bug
  If Mid(as_cadena,li_n, 1) = " " Then
    ls_barcode = ls_barcode + Char(228)
  ElseIf Asc(Mid(as_cadena,li_n, 1)) = 34 Then
    ls_barcode = ls_barcode + Char(226)
  Else
    ls_barcode = ls_barcode + Mid(as_cadena,li_n, 1)
  End If
Next

// Find the remainder when Sum is divided by 103
li_checksum = Mod(li_sum,103)
// Translate that value to an ASCII character
If li_checksum > 90 Then
  ls_checksum = Char(li_checksum + 103)
ElseIf li_checksum > 0 Then
  ls_checksum = Char(li_checksum + 32)
Else
  ls_checksum = Char(228)
End If

//Build ouput string, trailing space is for Windows rasterization bug
ls_barcode = ls_inicio + ls_barcode + ls_checksum + ls_fin 

Return ls_barcode
end function

